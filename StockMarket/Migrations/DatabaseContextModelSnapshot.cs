// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockMarket.Database;

#nullable disable

namespace StockMarket.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("StockMarket.Database.Model.ActiveOrdersEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VolumeRemaining")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.HasIndex("UserId");

                    b.ToTable("ActiveOrders");
                });

            modelBuilder.Entity("StockMarket.Database.Model.OrderFillEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("IdBuyOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSellOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsSettled")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Volume")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdBuyOrder");

                    b.HasIndex("IdSellOrder");

                    b.ToTable("OrderFills");
                });

            modelBuilder.Entity("StockMarket.Database.Model.OrderHistoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnUpdate()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("VolumeRequested")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Ticker");

                    b.HasIndex("UserId");

                    b.ToTable("OrdersHistory");
                });

            modelBuilder.Entity("StockMarket.Database.Model.SecurityEntity", b =>
                {
                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Ticker");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("StockMarket.Database.Model.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Funds")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0.0m);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("XAPIKey")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("XAPIKey")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StockMarket.Database.Model.UserPortfolioEntity", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ticker")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("UserId", "Ticker");

                    b.HasIndex("Ticker");

                    b.ToTable("UsersPortfolios");
                });

            modelBuilder.Entity("StockMarket.Database.Model.ActiveOrdersEntity", b =>
                {
                    b.HasOne("StockMarket.Database.Model.OrderHistoryEntity", "OrderHistory")
                        .WithOne("ActiveOrder")
                        .HasForeignKey("StockMarket.Database.Model.ActiveOrdersEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StockMarket.Database.Model.SecurityEntity", "Security")
                        .WithMany("ActiveOrders")
                        .HasForeignKey("Ticker")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockMarket.Database.Model.UserEntity", "User")
                        .WithMany("ActiveOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("OrderHistory");

                    b.Navigation("Security");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockMarket.Database.Model.OrderFillEntity", b =>
                {
                    b.HasOne("StockMarket.Database.Model.ActiveOrdersEntity", "BuyOrder")
                        .WithMany("BuyOrderFills")
                        .HasForeignKey("IdBuyOrder")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockMarket.Database.Model.ActiveOrdersEntity", "SellOrder")
                        .WithMany("SellOrderFills")
                        .HasForeignKey("IdSellOrder")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BuyOrder");

                    b.Navigation("SellOrder");
                });

            modelBuilder.Entity("StockMarket.Database.Model.OrderHistoryEntity", b =>
                {
                    b.HasOne("StockMarket.Database.Model.SecurityEntity", "Security")
                        .WithMany("OrderHistory")
                        .HasForeignKey("Ticker")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockMarket.Database.Model.UserEntity", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Security");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockMarket.Database.Model.UserPortfolioEntity", b =>
                {
                    b.HasOne("StockMarket.Database.Model.SecurityEntity", "Security")
                        .WithMany("Portfolio")
                        .HasForeignKey("Ticker")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("StockMarket.Database.Model.UserEntity", "User")
                        .WithMany("Portfolio")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Security");

                    b.Navigation("User");
                });

            modelBuilder.Entity("StockMarket.Database.Model.ActiveOrdersEntity", b =>
                {
                    b.Navigation("BuyOrderFills");

                    b.Navigation("SellOrderFills");
                });

            modelBuilder.Entity("StockMarket.Database.Model.OrderHistoryEntity", b =>
                {
                    b.Navigation("ActiveOrder")
                        .IsRequired();
                });

            modelBuilder.Entity("StockMarket.Database.Model.SecurityEntity", b =>
                {
                    b.Navigation("ActiveOrders");

                    b.Navigation("OrderHistory");

                    b.Navigation("Portfolio");
                });

            modelBuilder.Entity("StockMarket.Database.Model.UserEntity", b =>
                {
                    b.Navigation("ActiveOrders");

                    b.Navigation("Orders");

                    b.Navigation("Portfolio");
                });
#pragma warning restore 612, 618
        }
    }
}
